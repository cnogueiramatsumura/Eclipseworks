// <auto-generated />
using System;
using DataAcess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAcess.Migrations
{
    [DbContext(typeof(EclipseDBContext))]
    partial class EclipseDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAcess.Models.HistoricoTarefa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("statusAnterior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statusAtual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("usuarioId");

                    b.ToTable("HistoricoTarefas");
                });

            modelBuilder.Entity("DataAcess.Models.PrioridadeTarefa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nivelPrioridade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("prioridadeTarefa");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nivelPrioridade = "baixa"
                        },
                        new
                        {
                            id = 2,
                            nivelPrioridade = "media"
                        },
                        new
                        {
                            id = 3,
                            nivelPrioridade = "alta"
                        });
                });

            modelBuilder.Entity("DataAcess.Models.Projeto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("projeto");
                });

            modelBuilder.Entity("DataAcess.Models.StatusTarefa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("statusTarefa");

                    b.HasData(
                        new
                        {
                            id = 1,
                            descricao = "pendente"
                        },
                        new
                        {
                            id = 2,
                            descricao = "em andamento"
                        },
                        new
                        {
                            id = 3,
                            descricao = "concluída"
                        });
                });

            modelBuilder.Entity("DataAcess.Models.Tarefa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("prioridadeId")
                        .HasColumnType("int");

                    b.Property<int>("projetoId")
                        .HasColumnType("int");

                    b.Property<int>("statusId")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("prioridadeId");

                    b.HasIndex("projetoId");

                    b.HasIndex("statusId");

                    b.HasIndex("usuarioId");

                    b.ToTable("tarefa");
                });

            modelBuilder.Entity("DataAcess.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("perfilid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("perfilid");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("DataAcess.Models.UsuarioPerfil", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UsuarioPerfil");

                    b.HasData(
                        new
                        {
                            id = 1,
                            descricao = "Analista"
                        },
                        new
                        {
                            id = 2,
                            descricao = "Gerente"
                        });
                });

            modelBuilder.Entity("DataAcess.Models.HistoricoTarefa", b =>
                {
                    b.HasOne("DataAcess.Models.Usuario", "Usuario")
                        .WithMany("historico")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DataAcess.Models.Tarefa", b =>
                {
                    b.HasOne("DataAcess.Models.PrioridadeTarefa", "prioridade")
                        .WithMany("tarefas")
                        .HasForeignKey("prioridadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAcess.Models.Projeto", "projeto")
                        .WithMany("tarefas")
                        .HasForeignKey("projetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAcess.Models.StatusTarefa", "status")
                        .WithMany("tarefas")
                        .HasForeignKey("statusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAcess.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId");

                    b.Navigation("prioridade");

                    b.Navigation("projeto");

                    b.Navigation("status");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("DataAcess.Models.Usuario", b =>
                {
                    b.HasOne("DataAcess.Models.UsuarioPerfil", "perfil")
                        .WithMany("usuarios")
                        .HasForeignKey("perfilid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("perfil");
                });

            modelBuilder.Entity("DataAcess.Models.PrioridadeTarefa", b =>
                {
                    b.Navigation("tarefas");
                });

            modelBuilder.Entity("DataAcess.Models.Projeto", b =>
                {
                    b.Navigation("tarefas");
                });

            modelBuilder.Entity("DataAcess.Models.StatusTarefa", b =>
                {
                    b.Navigation("tarefas");
                });

            modelBuilder.Entity("DataAcess.Models.Usuario", b =>
                {
                    b.Navigation("historico");
                });

            modelBuilder.Entity("DataAcess.Models.UsuarioPerfil", b =>
                {
                    b.Navigation("usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
